rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read their own data and admins can read/write all user data
    match /users/{userId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == userId || isAdmin());
    }
    
    // Admin-only collections
    match /notifications/{document} {
      allow read, write: if request.auth != null && isAdmin();
    }
    
    match /badges/{document} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isAdmin();
    }
    
    match /challenges/{document} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isAdmin();
    }
    
    match /rewards/{document} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isAdmin();
    }
    
    match /systemAlerts/{document} {
      allow read, write: if request.auth != null && isAdmin();
    }
    
    // Public read content
    match /announcements/{document} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isAdmin();
    }
    
    match /news/{document} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isAdmin();
    }
    
    match /appContent/{document} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isAdmin();
    }
    
    // Events - users can read all, create their own, admins can manage all
    match /events/{document} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        (resource.data.createdBy == request.auth.uid || isAdmin());
    }
    
    // Activities - users can create their own, admins can read all
    match /activities/{document} {
      allow read: if request.auth != null && isAdmin();
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
    }
    
    // Helper function to check if user is admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.get('isAdmin', false) == true ||
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.get('role', '') == 'admin';
    }
  }
}
